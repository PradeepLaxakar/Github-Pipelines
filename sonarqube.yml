# Update <SONAR_PROJECT_KEY> #

name: Sonarqube-Dev

on:
  push:
    branches:
      - development
      - sonarqube

  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions: # permission to comment a PR
      contents: read
      pull-requests: write

    steps:
        - uses: actions/checkout@v2
          with:
            # Disabling shallow clone is recommended for improving the relevancy of reporting.
            fetch-depth: 0 # fetches the entire commit history of the repository, providing access to all commits, tags, and the complete project history

        # # Set up Node.js
        # - name: Set up Node.js
        #   uses: actions/setup-node@v3
        #   with:
        #     node-version: '18'

        # # Install dependencies
        # - name: Install Dependencies
        #   run: npm install

        # # Run tests with coverage
        # - name: Run Tests with Coverage
        #   run: npm run test-coverage || true

        # Triggering SonarQube analysis; the results are required for the Quality Gate check.
        - name: SonarQube Scan
          uses: sonarsource/sonarqube-scan-action@master
          env:
            sonar_projectkey: "InterviewAI-Dev"
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        
        # # If you wish to fail your job when the Quality Gate is red, uncomment the following lines.
        # # Check the Quality Gate status.
        # - name: SonarQube Quality Gate check
        #   id: sonarqube-quality-gate-check
        #   uses: sonarsource/sonarqube-quality-gate-action@master
        #   # Enforce a timeout to fail the step after a specific time.
        #   timeout-minutes: 5
        #   env:
        #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} # OPTIONAL

        # PR Decoration
        - name: SonarQube Pull Request Comment
          if: always()
          uses: campos-pay/sonarqube-pr-comment@main
          with:
            sonar_token: ${{ secrets.SONAR_TOKEN }}
            sonar_host_url: ${{ secrets.SONAR_HOST_URL }}
            sonar_projectkey: <SONAR_PROJECT_KEY> # ${{ github.event.repository.name }}
            github-token: ${{ secrets.GITHUB_TOKEN }} # This secret is automatically created by GitHub - https://github.com/campos-pay/sonarqube-pr-comment
            repo_name: ${{ github.repository }}
            pr_number: ${{ github.event.pull_request.number }}

# END ------------------------------------------------------------------